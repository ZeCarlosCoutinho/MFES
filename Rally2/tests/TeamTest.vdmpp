class TeamTest is subclass of TestCase

operations
public testTeam: () ==> ()
	testTeam() ==
	(
		dcl manager:Manager := new Manager("Malcom Wilson", "British");
		dcl team:Team := new Team("M-Sport", manager);
		dcl sponsor_ford:Sponsor := new Sponsor("Ford");
		dcl sponsor_castrol:Sponsor := new Sponsor("Castrol EDGE");
		dcl sponsor_michelin:Sponsor := new Sponsor("Michelen");
		dcl sponsor_onebet:Sponsor := new Sponsor("OneBet");
		dcl sponsor_msrt:Sponsor := new Sponsor("MS-RT");
		
		team.addCar("Ford", "Fiesta WRC", 2017, 380, "4WD", 1190, 1);
		team.addCar("Ford", "Fiesta WRC", 2017, 380, "4WD", 1190, 2);
		team.addCar("Ford", "Fiesta WRC", 2017, 380, "4WD", 1190, 3);
		assertTrue(card team.cars = 3);
		
		
		team.addDriver("Sébastien Ogier", "French");
		team.assignDriver(team.getCar(1), team.getMember("Sébastien Ogier"));
		team.addCoDriver("Julien Ingrassia", "French");
		team.assignCoDriver(team.getCar(1), team.getMember("Julien Ingrassia"));
		team.addDriver("Ott Tänak", "Estonian");
		team.assignDriver(team.getCar(2), team.getMember("Ott Tänak"));
		team.addCoDriver("Martin Järveoja", "Estonian");
		team.assignCoDriver(team.getCar(2), team.getMember("Martin Järveoja"));
		team.addDriver("Elfyn Evans", "British");
		team.assignDriver(team.getCar(3), team.getMember("Elfyn Evans"));
		team.addCoDriver("Daniel Barritt", "British");
		team.assignCoDriver(team.getCar(3), team.getMember("Daniel Barritt"));
		team.addMechanic("William Lawrence", "British");
		team.addMechanic("Reiner Buchwald", "German");
		team.assignMechanic(team.getCar(1), team.getMember("William Lawrence"));
		team.assignMechanic(team.getCar(1), team.getMember("Reiner Buchwald"));
		team.addMechanic("Roderick Gilbert", "Scottish");
		team.assignMechanic(team.getCar(2), team.getMember("Roderick Gilbert"));
		team.addMechanic("Felipe Warner", "Brazilian");
		team.assignMechanic(team.getCar(3), team.getMember("Felipe Warner"));
		assertTrue(card team.team_members = 11);
		assertTrue(team.getCar(1).driver.name = "Sébastien Ogier");
		assertTrue(team.getCar(1).co_driver.name = "Julien Ingrassia");
		assertTrue(card team.getCar(1).mechanics = 2);
		assertTrue(team.getCar(1).mechanics = {team.getMember("William Lawrence"), team.getMember("Reiner Buchwald")});
		
		team.addSponsor(sponsor_ford);
		team.addSponsor(sponsor_castrol);
		team.addSponsor(sponsor_michelin);
		team.addSponsor(sponsor_onebet);
		team.addSponsor(sponsor_msrt);
		assertTrue(card team.sponsors = 5);
		assertTrue(team.sponsors = {sponsor_ford, sponsor_castrol, sponsor_michelin, sponsor_onebet, sponsor_msrt});
		assertTrue(team.getCar(100) = nil);
		assertTrue(team.getMember("") = nil);
	);
	
public testTeamResults: () ==> ()
	testTeamResults() ==
	(
		dcl manager:Manager := new Manager("Malcom Wilson", "British");
		dcl team:Team := new Team("M-Sport", manager);
		
		dcl manager2:Manager := new Manager("Tommi Mäkinen", "Finish");
		dcl team2:Team := new Team("TOYOTA GAZOO RACING WRT", manager2);
		
		dcl beginning_date : Date := new Date(2010, 9, 21, 20, 30, 00);
		dcl mid_date : Date := new Date(2010, 9, 21, 22, 30, 00);
		dcl end_date : Date := new Date(2010, 9, 22, 20, 30, 00);
		dcl event:SpecialStage := new SpecialStage("Vodafone Rally de Portugal", "Portugal", beginning_date, end_date);
		dcl event2:AtoB := new AtoB("Pikes Peak International Hill Climb", "Pikes Peak, Colorado, USA", beginning_date, end_date);
		
		dcl team_results : seq of (CarResult);
		dcl team2_results : seq of (CarResult);
		
		team.addCar("Ford", "Fiesta WRC", 2017, 380, "4WD", 1190, 1);
		team.addCar("Ford", "Fiesta WRC", 2017, 380, "4WD", 1190, 2);
		
		team2.addCar("Toyota", "Yaris WRC", 2017, 380, "4WD", 1190, 10);
		team2.addCar("Toyota", "Yaris WRC", 2017, 380, "4WD", 1190, 11);
		
		event.addStage("SS1 LOUSADA", 1, 3360, mid_date);
		event.addStage("SS2 VIANA DO CASTELO 1", 2, 26700, mid_date);
		event.addStage("SS3 CAMINHA 1", 3, 18100, mid_date);
		
		event2.addTeam(team);
		event2.addTeam(team2);
		event.addTeam(team);
		event.addTeam(team2);
		
		event.getStage(1).addStageResult(team.getCar(1), 157300);
		event.getStage(1).addStageResult(team.getCar(2), 147200);
		event.getStage(1).addStageResult(team2.getCar(10), 145800);
		event.getStage(1).addStageResult(team2.getCar(11), 115400);
		
		event.getStage(2).addStageResult(team.getCar(1), 939922);
		event.getStage(2).addStageResult(team.getCar(2), 929227);
		event.getStage(2).addStageResult(team2.getCar(10), 941544);
		event.getStage(2).addStageResult(team2.getCar(11), 940578);
		
		event.getStage(3).addStageResult(team.getCar(1), 643099);
		event.getStage(3).addStageResult(team.getCar(2), 645199);
		event.getStage(3).addStageResult(team2.getCar(10), 658434);
		event.getStage(3).addStageResult(team2.getCar(11), 637224);
		
		event2.addRound(team.getCar(1), 546157, mid_date);
		event2.addRound(team.getCar(1), 546249, mid_date);
		event2.addRound(team.getCar(1), 548578, mid_date);
		
		event2.addRound(team.getCar(2), 547122, mid_date);
		event2.addRound(team.getCar(2), 557935, mid_date);
		event2.addRound(team.getCar(2), 548239, mid_date);
		
		event2.addRound(team2.getCar(10), 559935, mid_date);
		event2.addRound(team2.getCar(10), 554679, mid_date);
		event2.addRound(team2.getCar(10), 562486, mid_date);
		
		event2.addRound(team2.getCar(11), 551356, mid_date);
		event2.addRound(team2.getCar(11), 566036, mid_date);
		event2.addRound(team2.getCar(11), 541092, mid_date);
		
		team_results := team.getEventResults();
		team2_results := team2.getEventResults();
		
		assertTrue(team_results(1).car.number = 1 and team_results(1).event.name = "Pikes Peak International Hill Climb" and team_results(1).position = 2);
		assertTrue(team_results(2).car.number = 2 and team_results(2).event.name = "Pikes Peak International Hill Climb" and team_results(2).position = 3);
		assertTrue(team_results(3).car.number = 1 and team_results(3).event.name = "Vodafone Rally de Portugal" and team_results(3).position = 3);
		assertTrue(team_results(4).car.number = 2 and team_results(4).event.name = "Vodafone Rally de Portugal" and team_results(4).position = 2);
		
		assertTrue(team2_results(1).car.number = 10 and team2_results(1).event.name = "Pikes Peak International Hill Climb" and team2_results(1).position = 4);
		assertTrue(team2_results(2).car.number = 11 and team2_results(2).event.name = "Pikes Peak International Hill Climb" and team2_results(2).position = 1);
		assertTrue(team2_results(3).car.number = 10 and team2_results(3).event.name = "Vodafone Rally de Portugal" and team2_results(3).position = 4);
		assertTrue(team2_results(4).car.number = 11 and team2_results(4).event.name = "Vodafone Rally de Portugal" and team2_results(4).position = 1);
		
	);
	
public testGetCar: () ==> ()
	testGetCar() ==
	(
		dcl manager:Manager := new Manager("Malcom Wilson", "British");
		dcl team:Team := new Team("M-Sport", manager);
		
		team.addCar("Ford", "Fiesta WRC", 2017, 380, "4WD", 1190, 1);
		team.addCar("Ford", "Fiesta WRC", 2017, 380, "4WD", 1190, 2);
		
		assertTrue(team.getCar(2).make = "Ford" and team.getCar(2).model = "Fiesta WRC" and team.getCar(2).year = 2017 and team.getCar(2).bhp = 380 and  team.getCar(2).weight = 1190 and team.getCar(2).traction = "4WD" and team.getCar(2).team = team and team.getCar(2).number = 2); 
		assertTrue(team.getCar(1).make = "Ford" and team.getCar(1).model = "Fiesta WRC" and team.getCar(1).year = 2017 and team.getCar(1).bhp = 380 and  team.getCar(1).weight = 1190 and team.getCar(1).traction = "4WD" and team.getCar(1).team = team and team.getCar(1).number = 1); 
		assertTrue(team.getCar(3) = nil);
	);
	
public testGetMember: () ==> ()
	testGetMember() ==
	(
		dcl manager:Manager := new Manager("Malcom Wilson", "British");
		dcl team:Team := new Team("M-Sport", manager);
		
		team.addDriver("Sébastien Ogier", "French");
		team.addCoDriver("Julien Ingrassia", "French");
		team.addMechanic("Felipe Warner", "Brazilian");
		
		assertTrue(team.getMember("Sébastien Ogier").name = "Sébastien Ogier" and team.getMember("Sébastien Ogier").nationality = "French");
		assertTrue(team.getMember("Julien Ingrassia").name = "Julien Ingrassia" and team.getMember("Julien Ingrassia").nationality = "French");
		assertTrue(team.getMember("Felipe Warner").name = "Felipe Warner" and team.getMember("Felipe Warner").nationality = "Brazilian");
		assertTrue(team.getMember("Reiner Buchwalds") = nil);
	);

end TeamTest