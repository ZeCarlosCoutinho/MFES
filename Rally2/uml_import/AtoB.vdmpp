class AtoB is subclass of Event
instance variables
  public round:seq of (Round);

operations
  public  addRound : Car * int * Date ==> ()
  addRound(car, round_time, date) ==
    (
    	dcl newRound : Round := new Round(round_time, date, car);
    	round := round ^ [newRound];
    	-- TODO This dates are not valid
    	beginning_date := date;
    	end_date := date;
    )
    pre car <> undefined 
    	and round_time <> undefined
    	and date <> undefined
    post getRound(car, date) in set elems round;

  public  getCarRounds : Car ==> Round
  getCarRounds(car) ==
    is not yet specified;

  public  sortRounds : ()  ==> ?
  sortRounds() ==
    is not yet specified;

  public  getFinalResults : ()  ==> Round
  getFinalResults() ==
    is not yet specified;

  public  AtoB : seq of (char) * seq of (char) * Date * Date==> AtoB
  AtoB(nm, loc, beginning_d, end_d) ==
  (
    teams := {};
    beginning_date := beginning_d;
  	end_date := end_d;
  	name := nm;
  	location := loc;
  	round := [];
  	return self;
   );
   
   public pure getRound : Car * Date ==> Round
   getRound(car, date) ==
   (
   	 for all rnd in set elems round do
   	 	if rnd.car = car and rnd.date = date
   	 	then return rnd;
   	 return undefined; --When no Round is found
   );


end AtoB
