class SpecialStage is subclass of Event
instance variables
  public stages:set of (Stage);

operations
  public  addStage : seq of (char) * int * int * Date ==> ()
  addStage(nm, number, distance, date) ==
    (
    dcl stage:Stage := new Stage(nm, distance, number, date, self);
    stages := stages union {stage};
    );
    

  public  getResults : ()  ==> Stage
  getResults() ==
    (
    dcl results:Stage := new Stage();
    results.stage_results := [];
    
    for all team in set teams do
    (
    	for all car in set team.cars do
    	(
    		dcl stage_result:StageResult := new StageResult(car, 0);
    		results.stage_results := results.stage_results ^ [stage_result];
    	);
    );
    
    for all stage in set stages do
    (
    	for n = 1 to len stage.stage_results do
    	(
    		dcl res:StageResult := results.getStageResult(stage.stage_results(n).car.number);
    		res.stage_time := res.stage_time + stage.stage_results(n).stage_time;
    	);
    );
    
    results.sortResults();
   	
    return results;
    );

  public  SpecialStage : seq of (char) * seq of (char) * Date * Date ==> SpecialStage
  SpecialStage(nm, loc, bg_date, e_date) ==
    (
    name := nm;
    location := loc;
    beginning_date := bg_date;
    end_date := e_date;
    stages := {};
    teams := {};
    );
    
	public pure  getStage : int ==> [Stage]
  getStage(n) ==
    (
		dcl ret_stage:[Stage] := nil;
		
		for all stage in set stages do
			if stage.number = n
			then return stage;
		return ret_stage;
		)
		pre stages <> {}
		post RESULT in set stages or RESULT = nil;


end SpecialStage
