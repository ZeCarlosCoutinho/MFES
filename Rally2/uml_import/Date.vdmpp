class Date
types
	public CalendarDate ::	year : nat
													month : nat1
													day : nat1
					inv cd == cd.month <= 12 and cd.day <= 31;
	public TimeStamp ::	hours : nat
											minutes : nat
											seconds : nat
					inv ts == ts.hours <= 23 and ts.minutes <= 59 and ts.seconds <= 59;
instance variables
	calendardate : CalendarDate := mk_CalendarDate(0, 1, 1);
	timestamp : TimeStamp := mk_TimeStamp(0, 0, 0);

operations
  public  Date : int * int * int * int * int * int ==> Date
  Date(yr, mnth, d, hrs, mnts, scnds) ==
  (
  	calendardate.year := yr;
  	calendardate.month := mnth;
  	calendardate.day := d;
  	timestamp.hours := hrs;
  	timestamp.minutes := mnts;
  	timestamp.seconds := scnds;
  );
  
  -- TODO : Add to Model
  public isequal : [Date] ==> bool
  isequal(dt) ==
  (
  	if	self.calendardate.year = dt.calendardate.year and 
  			self.calendardate.month = dt.calendardate.month and
  			self.calendardate.day = dt.calendardate.day and
  			self.timestamp.hours = dt.timestamp.hours and
  			self.timestamp.minutes = dt.timestamp.minutes and
 				self.timestamp.seconds = dt.timestamp.seconds
 		then return true
 		else return false; 
  )
  pre dt <> nil;

end Date
