class Team
instance variables
  team_members:set of (TeamMember);
  cars:set of (Car);
  manager:Manager;
  sponsors:set of (Sponsor);
  events:set of (Event);
  name:seq of (char);

operations
  public  Team : seq of (char) ==> Team
  Team(nm) ==
    (
    name := nm;
    events := {};
    sponsors := {};
    cars := {};
    team_members := {};
    );

  public  addDriver : seq of (char) * seq of (char) ==> ?
  addDriver(name, nationality) ==
    is not yet specified;

  public  addCoDriver : seq of (char) * seq of (char) ==> ?
  addCoDriver(name, nationality) ==
    is not yet specified;

  public  addMechanic : seq of (char) * seq of (char) ==> ?
  addMechanic(name, nationality) ==
    is not yet specified;

  public  addCar : seq of (char) * seq of (char) * int * int * seq of (char) * int ==> ?
  addCar(make, model, year, bhp, traction, weight) ==
    is not yet specified;

  public  assignDriver : Car * Driver ==> ?
  assignDriver(car, member) ==
    is not yet specified;

  public  assignCoDriver : Car * CoDriver ==> ?
  assignCoDriver(car, co_driver) ==
    is not yet specified;

  public  assignMechanic : Car * Mechanic ==> ?
  assignMechanic(car, mechanic) ==
    is not yet specified;

  public  getEventResults : ()  ==> ?
  getEventResults() ==
    is not yet specified;

  public  addManager : seq of (char) * seq of (char) ==> ?
  addManager(nm, nati) ==
    is not yet specified;

  public  getCar : int ==> Car
  getCar(n) ==
    is not yet specified;

  public  getMember : seq of (char) ==> TeamMember
  getMember(nm) ==
    is not yet specified;


end Team
